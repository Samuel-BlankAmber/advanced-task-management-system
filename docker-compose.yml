services:
  frontend:
    build:
      context: ./frontend
      args:
        VITE_AUTH0_DOMAIN: ${VITE_AUTH0_DOMAIN}
        VITE_AUTH0_AUDIENCE: ${VITE_AUTH0_AUDIENCE}
        VITE_AUTH0_CLIENT_ID: ${VITE_AUTH0_CLIENT_ID}
        VITE_API_URL: ${VITE_API_URL:-http://host.docker.internal:${API_PORT:-5274}}
    container_name: task-management-frontend
    environment:
      VITE_AUTH0_DOMAIN: "${VITE_AUTH0_DOMAIN}"
      VITE_AUTH0_AUDIENCE: "${VITE_AUTH0_AUDIENCE}"
      VITE_AUTH0_CLIENT_ID: "${VITE_AUTH0_CLIENT_ID}"
      VITE_API_URL: "${VITE_API_URL:-http://host.docker.internal:${API_PORT:-5274}}"
    ports:
      - "${FRONTEND_PORT:-5173}:80"
    depends_on:
      - api

  api:
    build:
      context: ./api
    container_name: task-management-api
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      ConnectionStrings__TasksDb: "Host=${POSTGRES_HOST:-postgres}; Port=${POSTGRES_PORT:-5432}; Database=${POSTGRES_DB:-tasks}; Username=${POSTGRES_USER:-postgres}; Password=${POSTGRES_PW}"
      Auth0__Domain: "${AUTH0_DOMAIN}"
      Auth0__Audience: "${AUTH0_AUDIENCE}"
    ports:
      - "${API_PORT:-5274}:5000"
    depends_on:
      - postgres

  postgres:
    image: postgres:17
    container_name: task-management-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PW}
      POSTGRES_DB: ${POSTGRES_DB:-tasks}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
